{"version":3,"sources":["../../../../src/modules/utils/kugou/index.js"],"names":["kugou","name","artist","console","log","green","songName","encodeURIComponent","options","url","resolve","reject","sendRequest","result","data","JSON","parse","status","length","indexOf","hash320","hash","bitrate","filesize","error","yellow","key","rewriteUrl","replace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,K;;;;;;;2BACZC,I,EAAMC,M,EAAQ;AACnBC,cAAQC,GAAR,CAAY,qBAAqBC,KAAjC;AACAF,cAAQC,GAAR,CAAY,cAAcC,KAAd,GAAsBJ,IAAlC;AACAE,cAAQC,GAAR,CAAY,WAAWC,KAAX,GAAmBH,MAA/B;AACA,UAAII,WAAWC,mBAAmBL,SAAS,GAAT,GAAeD,IAAlC,CAAf;AACA,UAAIO,UAAU;AACZC,aAAK,uEAAuEH,QAAvE,GAAkF;AAD3E,OAAd;;AAIA,aAAO,sBAAY,iBAAeI,OAAf,EAAwBC,MAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI,iBAAOC,WAAP,CAAmBJ,OAAnB,CAFJ;;AAAA;AAEXK,uBAFW;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIfV,wBAAQC,GAAR;AAJe,iDAKRO,mBALQ;;AAAA;AAObG,oBAPa,GAONC,KAAKC,KAAL,CAAWH,OAAO,CAAP,CAAX,CAPM;;AAAA,sBAQbC,KAAKG,MAAL,IAAe,CAAf,IACA,CAAC,CAACH,KAAK,MAAL,EAAa,MAAb,EAAqBI,MADvB,IAEA,CAAC,CAACJ,KAAK,MAAL,EAAa,MAAb,EAAqB,CAArB,EAAwB,SAAxB,EAAmCI,MAFrC,IAGAJ,KAAK,MAAL,EAAa,MAAb,EAAqB,CAArB,EAAwB,UAAxB,EAAoCK,OAApC,CAA4ClB,IAA5C,KAAqD,CAAC,CAXzC;AAAA;AAAA;AAAA;;AAaXmB,uBAbW,GAaDN,KAAK,MAAL,EAAa,MAAb,EAAqB,CAArB,EAAwB,SAAxB,CAbC;;AAcfD,yBAAS;AACPQ,wBAAMD,OADC;AAEPE,2BAAS,MAFF;AAGPC,4BAAUT,KAAK,MAAL,EAAa,MAAb,EAAqB,CAArB,EAAwB,aAAxB;AAHH,iBAAT;AAde,iDAmBRJ,QAAQG,MAAR,CAnBQ;;AAAA;AAqBfV,wBAAQqB,KAAR,CAAc,8BAA8BC,MAA5C;AArBe,iDAsBRf,QAAQ,IAAR,CAtBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ,CAAP;AAyBD;;;2BAEMW,I,EAAM;AACX,UAAIK,MAAM,kBAAIL,OAAO,SAAX,CAAV;AACA,UAAIb,UAAU;AACZC,aAAK,iEAAiEY,IAAjE,GAAwE,OAAxE,GAAkFK;AAD3E,OAAd;;AAIA,aAAO,sBAAY,kBAAehB,OAAf,EAAwBC,MAAxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI,iBAAOC,WAAP,CAAmBJ,OAAnB,CAFJ;;AAAA;AAEXK,wBAFW;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIfV,wBAAQC,GAAR;AAJe,kDAKRO,oBALQ;;AAAA;AAObG,oBAPa,GAONC,KAAKC,KAAL,CAAWH,OAAO,CAAP,CAAX,CAPM;;AAAA,sBAQbC,KAAKG,MAAL,IAAe,CARF;AAAA;AAAA;AAAA;;AASXR,mBATW,GASLK,KAAK,KAAL,CATK;;AAWf;;AACA,oBAAG,iBAAOa,UAAV,EAAsB;AACpBlB,wBAAMA,IAAImB,OAAJ,CAAY,kBAAZ,EAAgC,qBAAhC,CAAN;AACD;;AAdc,kDAgBRlB,QAAQD,GAAR,CAhBQ;;AAAA;AAkBfN,wBAAQqB,KAAR,CAAcV,KAAK,OAAL,CAAd;AAlBe,kDAmBRH,OAAOG,KAAK,OAAL,CAAP,CAnBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ,CAAP;AAsBD;;;;;kBAjEkBd,K","file":"index.js","sourcesContent":["import colors from 'colors';\nimport md5 from 'md5';\nimport request from 'request';\nimport common from '../common';\nimport config from '../../config';\n\nexport default class kugou {\n  search(name, artist) {\n    console.log(\"Search from Kugou.\".green);\n    console.log(\"Song name: \".green + name);\n    console.log(\"Artist: \".green + artist);\n    let songName = encodeURIComponent(artist + \" \" + name);\n    let options = {\n      url: \"http://mobilecdn.kugou.com/api/v3/search/song?format=json&keyword=\" + songName + \"&page=1&pagesize=1&showtype=1\"\n    };\n\n    return new Promise(async function(resolve, reject) {\n      try {\n        let result = await common.sendRequest(options);\n      } catch(err) {\n        console.log(err);\n        return reject(err);\n      }\n      let data = JSON.parse(result[1]);\n      if (data.status == 1 &&\n          !!data['data']['info'].length &&\n          !!data['data']['info'][0]['320hash'].length &&\n          data['data']['info'][0]['songname'].indexOf(name) != -1) {\n\n        let hash320 = data['data']['info'][0]['320hash'];\n        result = {\n          hash: hash320,\n          bitrate: 320000,\n          filesize: data['data']['info'][0]['320filesize']\n        };\n        return resolve(result);\n      } else {\n        console.error('No resource found on kugou.'.yellow);\n        return resolve(null);\n      }\n    });\n  };\n\n  getUrl(hash) {\n    let key = md5(hash + 'kgcloud');\n    let options = {\n      url: \"http://trackercdn.kugou.com/i/?acceptMp3=1&cmd=4&pid=6&hash=\" + hash + \"&key=\" + key\n    };\n\n    return new Promise(async function(resolve, reject) {\n      try {\n        let result = await common.sendRequest(options);\n      } catch(err) {\n        console.log(err);\n        return reject(err);\n      }\n      let data = JSON.parse(result[1]);\n      if (data.status == 1) {\n        let url = data['url'];\n\n        // 魔改 URL 应对某司防火墙\n        if(config.rewriteUrl) {\n          url = url.replace('fs.web.kugou.com', 'music.163.com/kugou');\n        }\n\n        return resolve(url);\n      } else {\n        console.error(data['error']);\n        return reject(data['error']);\n      }\n    });\n  };\n}\n"]}