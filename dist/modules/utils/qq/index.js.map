{"version":3,"sources":["../../../../src/modules/utils/qq/index.js"],"names":["qq","QQ","name","artist","console","log","green","songName","encodeURIComponent","options","url","resolve","reject","sendRequest","result","data","JSON","parse","keyword","replace","toLowerCase","fsong","song","list","code","length","indexOf","f","split","bitrate","filesize","hash","yellow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,KAAK,SAALA,EAAK,GAAW,CAAE,CAAtB;;IAEqBC,E;;;;;;;2BACZC,I,EAAMC,M,EAAQ;AACnBC,cAAQC,GAAR,CAAY,wBAAwBC,KAApC;AACAF,cAAQC,GAAR,CAAY,cAAcC,KAAd,GAAsBJ,IAAlC;AACAE,cAAQC,GAAR,CAAY,WAAWC,KAAX,GAAmBH,MAA/B;AACA,UAAII,WAAWC,mBAAmBL,SAAS,GAAT,GAAeD,IAAlC,CAAf;AACA,UAAIO,UAAU;AACZC,aAAK,gJAAgJH;AADzI,OAAd;;AAIA,aAAO,sBAAY,iBAAeI,OAAf,EAAwBC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI,iBAAOC,WAAP,CAAmBJ,OAAnB,CAFJ;;AAAA;AAEXK,sBAFW;AAGXC,oBAHW,GAGJC,KAAKC,KAAL,CAAWH,OAAO,CAAP,CAAX,CAHI;AAIXI,uBAJW,GAIDhB,KAAKiB,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,WAAxB,EAJC;AAKXC,qBALW,GAKHN,KAAKA,IAAL,CAAUO,IAAV,CAAeC,IAAf,CAAoB,CAApB,EAAuBF,KAAvB,CAA6BF,OAA7B,CAAqC,KAArC,EAA4C,EAA5C,EAAgDC,WAAhD,EALG;;AAAA,sBAMXL,KAAKS,IAAL,KAAc,CAAd,IACAT,KAAKA,IAAL,CAAUO,IAAV,CAAeC,IAAf,CAAoBE,MAApB,GAA6B,CAD7B,IAEAJ,MAAMK,OAAN,CAAcR,OAAd,KAA0B,CAAC,CARhB;AAAA;AAAA;AAAA;;AAUTK,oBAVS,GAUFR,KAAKA,IAAL,CAAUO,IAAV,CAAeC,IAAf,CAAoB,CAApB,EAAuBI,CAAvB,CAAyBC,KAAzB,CAA+B,GAA/B,CAVE;;AAWbd,yBAAS;AACPJ,uBAAK,kCAAkCa,KAAK,CAAL,CAAlC,GAA4C,MAD1C;AAEPM,2BAASN,KAAK,EAAL,CAFF;AAGPO,4BAAUP,KAAK,EAAL,CAHH;AAIPQ,wBAAM,kBAAIR,KAAK,CAAL,CAAJ;AAJC,iBAAT;AAXa,iDAiBNZ,QAAQG,MAAR,CAjBM;;AAAA;AAmBbV,wBAAQC,GAAR,CAAY,kCAAkC2B,MAA9C;AAnBa,iDAoBNrB,QAAQ,IAAR,CApBM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBfP,wBAAQC,GAAR;AACAO;;AAxBe;AAyBhB;;AAzBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ,CAAP;AA2BD;;;;;kBArCkBX,E","file":"index.js","sourcesContent":["import colors from 'colors';\nimport md5 from 'md5';\nimport request from 'request';\nimport common from '../common';\n\nlet qq = function() {};\n\nexport default class QQ {\n  search(name, artist) {\n    console.log(\"Search from QQ Music.\".green);\n    console.log(\"Song name: \".green + name);\n    console.log(\"Artist: \".green + artist);\n    let songName = encodeURIComponent(artist + \" \" + name);\n    let options = {\n      url: \"http://s.music.qq.com/fcgi-bin/music_search_new_platform?n=1&cr=1&loginUin=0&format=json&inCharset=utf-8&outCharset=utf-8&p=1&catZhida=0&w=\" + songName\n    };\n\n    return new Promise(async function(resolve, reject) {\n      try {\n        let result = await common.sendRequest(options);\n        let data = JSON.parse(result[1]);\n        let keyword = name.replace(/\\s/g, '').toLowerCase();\n        let fsong = data.data.song.list[0].fsong.replace(/\\s/g, '').toLowerCase();\n        if (data.code === 0 &&\n            data.data.song.list.length > 0 &&\n            fsong.indexOf(keyword) != -1) {\n\n          let list = data.data.song.list[0].f.split('|');\n          result = {\n            url: 'http://music.163.com/qqmusic/' + list[0] + '.mp3',\n            bitrate: list[13],\n            filesize: list[11],\n            hash: md5(list[0])\n          };\n          return resolve(result);\n        } else {\n          console.log(\"No resource found from QQ Music\".yellow);\n          return resolve(null);\n        }\n      }catch(err) {\n        console.log(err);\n        reject(err);\n      };\n    });\n  };\n}\n"]}