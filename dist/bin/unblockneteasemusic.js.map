{"version":3,"sources":["../../src/bin/unblockneteasemusic.js"],"names":["port","server","createServer","callback","listen","on","onError","onListening","error","syscall","bind","code","console","process","exit","addr","address","log","yellow"],"mappings":";;AAMA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;AATA;;;;AAaA,IAAIA,OAAO,iBAAOA,IAAP,IAAe,MAA1B;;AAEA;;;;AAIA,IAAIC,SAAS,eAAKC,YAAL,CAAkB,cAAIC,QAAJ,EAAlB,CAAb;;AAEA;;;;AAIAF,OAAOG,MAAP,CAAcJ,IAAd;AACAC,OAAOI,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAL,OAAOI,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAEA;;;;AAIA,SAASD,OAAT,CAAiBE,KAAjB,EAAwB;AACtB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,MAAIE,OAAO,OAAOV,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd;;AAIA;AACA,UAAQQ,MAAMG,IAAd;AACE,SAAK,QAAL;AACEC,cAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEF,cAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAG,cAAQC,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMN,KAAN;AAVJ;AAYD;;AAED;;;;AAIA,SAASD,WAAT,GAAuB;AACrB,MAAIQ,OAAOd,OAAOe,OAAP,EAAX;AACA,MAAIN,OAAO,OAAOK,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,KAAKf,IAFnB;AAGAY,UAAQK,GAAR,CAAY,gBAAgBC,MAAhB,GAAyBR,KAAKQ,MAA1C;AACD","file":"unblockneteasemusic.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nimport app from '../app';\nimport http from 'http';\nimport colors from 'colors';\nimport config from '../modules/config';\n\n/**\n * Get port from environment and store in Express.\n */\n\nlet port = config.port || '8123';\n\n/**\n * Create HTTP server.\n */\n\nlet server = http.createServer(app.callback());\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  let bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  let addr = server.address();\n  let bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  console.log('Listening on '.yellow + bind.yellow);\n}\n"]}